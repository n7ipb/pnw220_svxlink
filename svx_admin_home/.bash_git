function formattedGitBranch {
    checkDir="$PWD"

    # check whether we''re in a git repository
    while [[ "$checkDir" != "/" ]]; do
        if [[ -d "$checkDir/.git" ]]; then
            echo -n -e " @\e[0;32m"
            GIT_DIR="$checkDir/.git" git branch \
                | grep "^\*" | sed -e "s/^\*//"
            return 0
        fi
        checkDir=$(readlink -f "$checkDir/..")
    done

    return 1
}

#export PS1="[\e[1;32m\]\u@\h\[\e[m\] \[\e[1;34m\]\w\[\e[m\]\$(formattedGitBranch)\[\e[1;32m\]\[\e[m\]\[\e[0m]$ "

#PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\
#\w\[\033[01;36m\]$(git branch &>/dev/null; if [ $? -eq 0 ]; then \
#echo " ($(git branch | grep '^*' |sed s/\*\ //))"; fi)\[\033[00m\]\$ '

PS1='[${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\
\w\[\033[01;36m\]$(git branch &>/dev/null; if [ $? -eq 0 ]; then \
echo " ($(git branch | grep '^*' |sed s/\*\ //))"; fi)\[\033[00m\]]\$ '
